--------------------------------------------------------------------------------
Command:            prog
Massif arguments:   (none)
ms_print arguments: massif.out.22354
--------------------------------------------------------------------------------


    MB
29.18^                                                                       #
     |                                                                   ::::#
     |                                                    ::::::::::::@::::::#
     |                             :::::::::::::::::::::::::: ::: :: :@::::::#
     |                   :::::::::::: ::: :: :: :::: :::::::: ::: :: :@::::::#
     |                   :: : :: : :: ::: :: :: :::: :::::::: ::: :: :@::::::#
     |                   :: : :: : :: ::: :: :: :::: :::::::: ::: :: :@::::::#
     |                   :: : :: : :: ::: :: :: :::: :::::::: ::: :: :@::::::#
     |                   :: : :: : :: ::: :: :: :::: :::::::: ::: :: :@::::::#
     |                   :: : :: : :: ::: :: :: :::: :::::::: ::: :: :@::::::#
     |                   :: : :: : :: ::: :: :: :::: :::::::: ::: :: :@::::::#
     |              @:::@:: : :: : :: ::: :: :: :::: :::::::: ::: :: :@::::::#
     |     :::::::::@ : @:: : :: : :: ::: :: :: :::: :::::::: ::: :: :@::::::#
     |     :: ::: : @ : @:: : :: : :: ::: :: :: :::: :::::::: ::: :: :@::::::#
     |     :: ::: : @ : @:: : :: : :: ::: :: :: :::: :::::::: ::: :: :@::::::#
     |     :: ::: : @ : @:: : :: : :: ::: :: :: :::: :::::::: ::: :: :@::::::#
     | @::::: ::: : @ : @:: : :: : :: ::: :: :: :::: :::::::: ::: :: :@::::::#
     | @: ::: ::: : @ : @:: : :: : :: ::: :: :: :::: :::::::: ::: :: :@::::::#
     | @: ::: ::: : @ : @:: : :: : :: ::: :: :: :::: :::::::: ::: :: :@::::::#
     | @: ::: ::: : @ : @:: : :: : :: ::: :: :: :::: :::::::: ::: :: :@::::::#
   0 +----------------------------------------------------------------------->Gi
     0                                                                   122.1

Number of snapshots: 56
 Detailed snapshots: [1, 10, 13, 47, 55 (peak)]

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
  0              0                0                0             0            0
  1  3,432,954,889        6,432,280        3,859,368     2,572,912            0
60.00% (3,859,368B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->23.50% (1,511,880B) 0x400CF4: addList (linkedList.c:302)
| ->23.50% (1,511,880B) 0x400F1D: main (linkedListMain.c:20)
|   
->12.98% (835,200B) 0x400DBB: containsList (linkedList.c:329)
| ->12.98% (835,200B) 0x400F52: main (linkedListMain.c:24)
|   
->11.94% (767,976B) 0x4006E1: _addLinkBefore (linkedList.c:69)
| ->11.94% (767,976B) 0x400D5A: addList (linkedList.c:311)
|   ->11.94% (767,976B) 0x400F1D: main (linkedListMain.c:20)
|     
->11.57% (744,000B) 0x4007AC: _removeLink (linkedList.c:95)
| ->11.57% (744,000B) 0x4008F4: freeLinkedList (linkedList.c:141)
|   ->11.57% (744,000B) 0x40095F: deleteLinkedList (linkedList.c:156)
|     ->11.57% (744,000B) 0x400F9A: main (linkedListMain.c:29)
|       
->00.00% (312B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
  2  5,079,736,135        6,647,400        3,988,440     2,658,960            0
  3  7,703,378,758        7,194,240        4,316,544     2,877,696            0
  4 10,518,395,832       12,803,040        7,681,824     5,121,216            0
  5 12,360,903,642       12,906,000        7,743,600     5,162,400            0
  6 15,124,401,135       13,069,560        7,841,736     5,227,824            0
  7 17,585,310,495       13,226,360        7,935,816     5,290,544            0
  8 19,650,335,457       13,368,040        8,020,824     5,347,216            0
  9 22,128,225,690       13,553,680        8,132,208     5,421,472            0
 10 25,638,971,925       13,858,760        8,315,256     5,543,504            0
60.00% (8,315,256B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->21.99% (3,047,856B) 0x400CF4: addList (linkedList.c:302)
| ->21.99% (3,047,856B) 0x400F1D: main (linkedListMain.c:20)
|   
->16.01% (2,219,064B) 0x400DBB: containsList (linkedList.c:329)
| ->16.01% (2,219,064B) 0x400F52: main (linkedListMain.c:24)
|   
->11.08% (1,535,976B) 0x4006E1: _addLinkBefore (linkedList.c:69)
| ->11.08% (1,535,976B) 0x400D5A: addList (linkedList.c:311)
|   ->11.08% (1,535,976B) 0x400F1D: main (linkedListMain.c:20)
|     
->10.91% (1,512,000B) 0x4007AC: _removeLink (linkedList.c:95)
| ->10.91% (1,512,000B) 0x4008F4: freeLinkedList (linkedList.c:141)
|   ->10.91% (1,512,000B) 0x40095F: deleteLinkedList (linkedList.c:156)
|     ->10.91% (1,512,000B) 0x400F9A: main (linkedListMain.c:29)
|       
->00.00% (360B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 11 27,290,950,407       14,028,600        8,417,160     5,611,440            0
 12 30,135,232,251       14,397,720        8,638,632     5,759,088            0
 13 32,799,221,182       15,240,360        9,144,216     6,096,144            0
60.00% (9,144,216B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->20.00% (3,048,000B) 0x400DBB: containsList (linkedList.c:329)
| ->20.00% (3,048,000B) 0x400F52: main (linkedListMain.c:24)
|   
->20.00% (3,047,856B) 0x400CF4: addList (linkedList.c:302)
| ->20.00% (3,047,856B) 0x400F1D: main (linkedListMain.c:20)
|   
->10.08% (1,535,976B) 0x4006E1: _addLinkBefore (linkedList.c:69)
| ->10.08% (1,535,976B) 0x400D5A: addList (linkedList.c:311)
|   ->10.08% (1,535,976B) 0x400F1D: main (linkedListMain.c:20)
|     
->09.92% (1,512,024B) 0x4007AC: _removeLink (linkedList.c:95)
| ->09.92% (1,512,024B) 0x4008F4: freeLinkedList (linkedList.c:141)
|   ->09.92% (1,512,024B) 0x40095F: deleteLinkedList (linkedList.c:156)
|     ->09.92% (1,512,024B) 0x400F9A: main (linkedListMain.c:29)
|       
->00.00% (360B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 14 35,292,691,085       25,545,080       15,327,048    10,218,032            0
 15 38,140,731,929       25,620,760       15,372,456    10,248,304            0
 16 41,345,553,173       25,707,320       15,424,392    10,282,928            0
 17 44,906,106,323       25,805,320       15,483,192    10,322,128            0
 18 47,300,324,279       25,872,360       15,523,416    10,348,944            0
 19 50,892,298,679       25,974,760       15,584,856    10,389,904            0
 20 53,286,093,005       26,044,280       15,626,568    10,417,712            0
 21 56,278,975,568       26,132,720       15,679,632    10,453,088            0
 22 58,672,196,168       26,204,720       15,722,832    10,481,888            0
 23 61,068,039,968       26,278,000       15,766,800    10,511,200            0
 24 63,464,396,504       26,352,560       15,811,536    10,541,024            0
 25 65,859,118,448       26,428,400       15,857,040    10,571,360            0
 26 67,654,009,004       26,486,160       15,891,696    10,594,464            0
 27 71,244,281,183       26,604,200       15,962,520    10,641,680            0
 28 73,638,099,140       26,684,880       16,010,928    10,673,952            0
 29 76,696,396,655       26,790,440       16,074,264    10,716,176            0
 30 79,489,807,475       26,889,480       16,133,688    10,755,792            0
 31 81,352,027,643       26,957,000       16,174,200    10,782,800            0
 32 83,214,380,003       27,025,800       16,215,480    10,810,320            0
 33 86,937,698,525       27,167,480       16,300,488    10,866,992            0
 34 88,800,377,513       27,240,600       16,344,360    10,896,240            0
 35 90,662,390,573       27,315,320       16,389,192    10,926,128            0
 36 92,523,935,804       27,391,760       16,435,056    10,956,704            0
 37 94,385,811,710       27,470,080       16,482,048    10,988,032            0
 38 96,248,365,655       27,550,440       16,530,264    11,020,176            0
 39 98,109,689,753       27,632,920       16,579,752    11,053,168            0
 40 99,971,903,903       27,717,800       16,630,680    11,087,120            0
 41 102,764,671,868       27,850,000       16,710,000    11,140,000            0
 42 104,626,864,703       27,941,800       16,765,080    11,176,720            0
 43 106,488,961,340       28,036,880       16,822,128    11,214,752            0
 44 110,212,202,855       28,238,440       16,943,064    11,295,376            0
 45 112,074,381,068       28,346,000       17,007,600    11,338,400            0
 46 114,867,514,193       28,517,720       17,110,632    11,407,088            0
 47 117,659,908,640       28,704,880       17,222,928    11,481,952            0
60.00% (17,222,928B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->21.32% (6,119,832B) 0x400CF4: addList (linkedList.c:302)
| ->21.32% (6,119,832B) 0x400F1D: main (linkedListMain.c:20)
|   
->17.36% (4,982,712B) 0x400DBB: containsList (linkedList.c:329)
| ->17.36% (4,982,712B) 0x400F52: main (linkedListMain.c:24)
|   
->10.70% (3,071,976B) 0x4006E1: _addLinkBefore (linkedList.c:69)
| ->10.70% (3,071,976B) 0x400D5A: addList (linkedList.c:311)
|   ->10.70% (3,071,976B) 0x400F1D: main (linkedListMain.c:20)
|     
->10.62% (3,048,000B) 0x4007AC: _removeLink (linkedList.c:95)
| ->10.62% (3,048,000B) 0x4008F4: freeLinkedList (linkedList.c:141)
|   ->10.62% (3,048,000B) 0x40095F: deleteLinkedList (linkedList.c:156)
|     ->10.62% (3,048,000B) 0x400F9A: main (linkedListMain.c:29)
|       
->00.00% (408B) in 1+ places, all below ms_print's threshold (01.00%)

--------------------------------------------------------------------------------
  n        time(i)         total(B)   useful-heap(B) extra-heap(B)    stacks(B)
--------------------------------------------------------------------------------
 48 119,521,553,495       28,840,680       17,304,408    11,536,272            0
 49 121,383,261,815       28,987,880       17,392,728    11,595,152            0
 50 123,030,056,948       29,130,320       17,478,192    11,652,128            0
 51 124,677,160,754       29,288,160       17,572,896    11,715,264            0
 52 126,324,070,304       29,467,760       17,680,656    11,787,104            0
 53 127,971,110,840       29,681,840       17,809,104    11,872,736            0
 54 129,618,004,100       29,964,240       17,978,544    11,985,696            0
 55 131,136,633,251       30,600,400       18,360,240    12,240,160            0
60.00% (18,360,240B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->20.00% (6,120,000B) 0x400DBB: containsList (linkedList.c:329)
| ->20.00% (6,120,000B) 0x400F52: main (linkedListMain.c:24)
|   
->20.00% (6,119,832B) 0x400CF4: addList (linkedList.c:302)
| ->20.00% (6,119,832B) 0x400F1D: main (linkedListMain.c:20)
|   
->10.04% (3,071,976B) 0x4006E1: _addLinkBefore (linkedList.c:69)
| ->10.04% (3,071,976B) 0x400D5A: addList (linkedList.c:311)
|   ->10.04% (3,071,976B) 0x400F1D: main (linkedListMain.c:20)
|     
->09.96% (3,048,024B) 0x4007AC: _removeLink (linkedList.c:95)
| ->09.96% (3,048,024B) 0x4008F4: freeLinkedList (linkedList.c:141)
|   ->09.96% (3,048,024B) 0x40095F: deleteLinkedList (linkedList.c:156)
|     ->09.96% (3,048,024B) 0x400F9A: main (linkedListMain.c:29)
|       
->00.00% (408B) in 1+ places, all below ms_print's threshold (01.00%)

